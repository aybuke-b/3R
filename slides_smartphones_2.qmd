---
title: "Application des mod√®les SFA √† l'√©tude des prix"
subtitle: "<script>const currentDT = new Date().toLocaleDateString();document.write(currentDT);</script>"
author: "`Aybuk√© BICAT` & `Corentin DUCLOUX`"
institute: <img src = https://corentinducloux.fr/Reveal.js/univ-tours.png width="70%">
title-slide-attributes:
    data-notes: "Bonjour √† tous, on va vous pr√©senter la deuxi√®me partie de notre projet 3R portant sur l'application des mod√®les SFA √† l'√©tude des prix. Avant de rappeler les fondements th√©oriques des mod√®les SFA ainsi que les r√©sultats de l'estimation, on va revenir sur notre probl√©matique appliqu√©e."
format: 
  revealjs:
    slide-number: true
    mermaid-format: svg
    chalkboard: true
    transition: slide
    background-transition: fade
    theme: [blood, custom.scss]
    incremental: true   
    footer: "--- Recherche, R√©alisation, Restitution ---"
    logo: https://corentinducloux.fr/dossier_img/mecen_transparent.png
    controls : true
    preview-links: auto
    view-distance: 20
    reference-location: document
    bibliography: references.bib
    include-in-header:
        - text: |
            <style>
            #title-slide .title {
            font-size: 1.75em;
            }
            </style>
link-external-icon: true
engine: knitr
---

```{r}
#| label: lib_imports
library(gt)
library(arrow)
library(tidyverse)
library(frontier)
library(moments)
library(patchwork)
library(ggtext)
library(showtext)
```

```{r}
#| label: theming
#| echo: false
theme_set(theme_minimal())
thematic::thematic_on(bg = "#222222", fg = "white", accent = "purple", font = "PT Sans")
```

```{r}
#| label: custom_funcs
makestars <- function(pvalues) {
    return(
        dplyr::case_when(
            pvalues < 0.001 ~ "_***_",
            pvalues < 0.05 ~ "_***_",
            pvalues < 0.1 ~ "_***_",
            .default = ""
        )
    )
}

`%nin%` <- negate(`%in%`)
```

## Probl√©matique {background-color="black" background-image="https://vivreaulycee.fr/wp-content/uploads/2018/12/question-mark-2492009_1280-1200x480.jpg" background-size="cover" background-opacity="0.75"}

`Combinaison d'un mod√®le SFA et d'une r√©gression h√©donique pour √©valuer la discordance entre les prix de smartphones et leur valeur.`

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

::: {.notes}
*Corentin*


Notre probl√©matique √©tait la suivante : *Voir slide*

En se basant sur cette probl√©matique, nous voulions, en plus d'une estimation √©conom√©trique qui pr√©sente son lot de complexit√© (nous le verrons par la suite), cr√©er une application, et plus pr√©cis√©ment un comparateur d'efficacit√©.

En premier lieu, il convient de se poser une question qui semble √©vidente √† premi√®re vue, mais qui, quand on s'y penche de plus pr√®s, est assez sophistiqu√©e. 

- Cette question c'est "Qu'est ce qu'un comparateur exactement ?"
:::

## Comparateur {.smaller}

> *Un comparateur en ligne, qu'est ce que c'est ?*


::: {.callout-tip}

## D√©finition

Un comparateur est un site web qui permet de comparer diff√©rents produits ou services.

Principalement ax√© sur les prix, il peut √©galement prendre en compte les aspects techniques et la qualit√© des produits.

- <https://www.idealo.fr>
- <https://www.ledenicheur.fr>
- <https://www.kimovil.com/fr/>

:::

::: {.footer}
--- Recherche, R√©alisation, `Restitution` ---
:::

:::{.notes}
*Buk*


Un comparateur est un site web qui permet de comparer diff√©rents produits ou services.

Principalement ax√© sur les prix, il peut √©galement prendre en compte les aspects techniques et la qualit√© des produits.

Les exemples sont multiples : Comparateur de vols, d'assurances, de voitures, de banques...

En bref il existe une vari√©t√© de cas d'usage et un nombre croissant d'utilisateurs faisant appel √† ces comparateurs avant d'acheter un bien ou un service.

On a aussi mis √† disposition des exemples de comparateurs sur nos slides. 

Les deux premiers sont des r√©f√©rences dans le domaine des comparateurs de prix g√©n√©ralistes.

Le troisi√®me, `kimovil` est sp√©cialis√© dans l'analyse des smartphones et est assez analogue √† ce que nous allons proposer puisqu'il n'est pas uniquement un comparateur de prix mais qu'il inclut une dimension de mod√©lisation, plus pr√©cis√©ment un score qui est d√©termin√© gr√¢ce √† du **Machine Learning**.

Cela √©tant, la description du score est assez sommaire, il est simplement pr√©cis√© que plus de 200 variables sont utilis√©es... 

$\Rightarrow$ Finalement ce score est plut√¥t opaque.

:::

## Obligations d'information sur les comparateurs {.smaller}

Les op√©rateurs de plateforme en ligne doivent d√©livrer au consommateur une information **loyale**, **claire** et **transparente**, selon l‚Äôarticle [L. 111-7 du code de la consommation](https://www.legifrance.gouv.fr/codes/article_lc/LEGIARTI000033219601).

Les comparateurs en ligne sont donc eux aussi soumis √† ces obligations de loyaut√© et de transparence.

- Page d√©di√©e accessible depuis toutes les autres pages du comparateur informant le fonctionnement de celui-ci.

- Faire figurer sur chaque page de r√©sultats  les informations concernant les crit√®res de classement.

- Indiquer via la mention explicite **¬´ annonce ¬ª** les r√©sultats li√©s √† des partenariats r√©mun√©r√©s.

::: {.footer}
--- Recherche, R√©alisation, `Restitution` ---
:::

:::{.notes}
*Corentin*

Aybuk√© n'en a pas parl√© mais il y a des questions juridiques / √©conomiques / statistiques et algorithmiques qui se posent.

Il va sans dire que tr√®s peu de comparateurs respectent le premier point, souvent pour une raison simple : ce sont juste des listings de prix de t√©l√©phones du moins cher au plus cher, il n'y a pas vraiment de fonctionnement √† proprement parler.

De m√™me, concernant les crit√®res de classement.

En revanche le troisi√®me point est presque toujours indiqu√© quelque part avec la mention *publicit√©* ou *annonce* quand il y a un partenariat r√©mun√©r√©, et c'est normal car une grande partie des revenus de ces comparateurs provient de ces partenariats donc il font assez attention √† ce point.

***

L'avantage de notre comparateur c'est qu'il respecte les deux premiers points, sans se soucier du troisi√®me puisqu'on a pas de partenariats r√©mun√©r√©s. Tout √ßa permet d'offrir une grande transparence pour le consommateur.

:::

## Explication `SMART'SPECS`

:::: {.columns}

::: {.column width="50%"}
![](imgs/mermaid_graph.png){width=95%}
:::

::: {.column width="50%"}
<u>**Fonctionnalit√©s**</u> : 

- Statistiques √©l√©mentaires
- Restitution d'informations
- Effort visuel et nombreuses fonctionnalit√©s
- Moteur bas√© sur un mod√®le **SFA**
:::

::::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*

Je vais vous rappeler l'architecture de notre application, avec les blocs **Python** et **R** respectivement en jaune et en bleu.

On a int√©gr√© les r√©sultats par ce qu'on appelle le seuil d'efficacit√© qui correspond en fait √† un score.

Concernant les donn√©es, on s'est bas√© sur des donn√©es scrap√©es en f√©vrier uniquement sur le site du revendeur **Boulanger**.

Les mod√®les qu'on a construit que vous voyez dans le bloc en bleu d√©finissent le score (l'efficacit√©) en terme de prix.

Ensuite pour ce qui est des fonctionnalit√©s :

:::

## `SMART'SPECS` D√©monstration

**üöÄ Lancement de l'application** <img src="imgs/logo.png" alt="Logo" style="vertical-align: middle; margin-right: 2.5px; width: 60px; height: 60px;">




::: {.callout-note}

## Depuis le terminal

*Lancement du shell poetry* :

```powershell
py -m poetry shell
```

*Lancement de l'application* :

```powershell
python -m streamlit run Accueil.py
```


:::

:::{.callout-note}

## Depuis le lien de l'application d√©ploy√©e

- **Lien** : [https://smart-specs.streamlit.app/](https://smart-specs.streamlit.app/)

:::


::: {.footer}
--- Recherche, R√©alisation, `Restitution` ---
:::

:::{.notes}

1. **Page d'accueil**

*Buk*


Quand on lance l'application, on arrive donc sur une page d'accueil soign√©e pour expliquer l'utilit√© de notre comparateur Smart Specs, permettant de vous assister dans la qu√™te de votre smartphone id√©al. 

Il est pr√©cis√© pour l'utilisateur qu'un mod√®le SFA est utilis√© en arri√®re-plan mais on vous rappelera plus en d√©tail le fonctionnement du mod√®le SFA quand on arrivera √† la partie des r√©sultats.

On peut aussi voir la derni√®re d'actualisation du scraping. Par rapport √† la premi√®re pr√©sentation, ce sont donc des donn√©es plus r√©centes, issues de f√©vrier.

On peut ensuite s'int√©resser √† plusieurs autres pages.

2. **Insights**

*Corentin*


Les insights sont simplement des statistiques descriptives qui nous permettent de mettre en avant des r√©sultats pas forc√©ment observables dans l'achat d'un t√©l√©phone.

On peut par exemple s'int√©resser au prix moyen par marque. On retrouve, sans surprise, comme dans la premi√®re pr√©sentation, que XIAOMI propose les t√©l√©phones les moins chers en moyenne tandis qu'APPLE propose les t√©l√©phones les plus chers en moyenne.

Pour le nombre de mod√®les vendus par marque, on retrouve XIAOMI, SAMSUNG & APPLE sur le podium et qui poss√®dent √† eux trois plus de 300 t√©l√©phones commercialis√©s soit 80% du total sur Boulanger.


*Buk*
Pour ce qui est du prix en fonction de la RAM, on peut voir que le prix m√©dian augmente avec la RAM, ce qui est plut√¥t logique. On voit aussi gr√¢ce au jitterplot √† c√¥t√© du boxplot que la dispersion augmente √† mesure que la RAM augmente.

On peut faire les m√™mes interpr√©tations pour le boxplot du prix en fonction du stockage mais on remarque qu'il y a un peu moins de dispersion.



*Corentin*
Enfin, il y a aussi la distribution des prix, qu'on vous avait expos√© dans la premi√®re pr√©sentation et qui, on le rappelle, poss√©dait une distribution asym√©trique. C'est toujours le cas, et on remarque de mani√®re plus importante encore deux pics dans la distribution des prix, qui nous permettent de distinguer des t√©l√©phones **bas de gamme** et **haut de gamme**.

L'option distribution marginale permet de visualiser la distribution des t√©l√©phones sans aggr√©gation par intervalle de prix, c'est √† dire qu'on est en mesure de voir pour chaque mod√®le le prix exact.

Enfin, l'option la plus int√©ressante selon nous est la distribution par marque, qui permet de subdiviser la distribution g√©n√©rale par marque.

Ce qui pourrait √™tre int√©ressant serait de s√©lectionner les marques qui nous int√©ressent : par exemple XIAOMI et APPLE, et on remarque que XIAOMI est sur une gamme de prix bas tandis que pour APPLE la gamme de prix est plus √©tal√©e. On voit globalement que ces deux marques ne sont pas sur le m√™me march√©.

3. **Efficacit√©**

*Buk*

Apr√®s avoir pris connaissance de ces insights, l'utilisateur peut naviguer sur la page d'analyse de l'efficacit√© calcul√©e par le mod√®le SFA, qui est le point central de notre application.

Initialement, pour une question de lisibilit√© les deux seules marques s√©lectionn√©es sont APPLE & SAMSUNG, mais on peut choisir plus de marques si on le souhaite. De m√™me, le prix maximal d'un smartphone est fix√© √† 500 ‚Ç¨, que l'utilisateur pourra ensuite modifier √† sa guise.

On voit ensuite deux indicateurs : le nombre de t√©l√©phones efficaces et inefficaces. Ces indicateurs proviennent du nuage de points des efficacit√©s en fonction du prix qu'on peut voir ici. Tous les t√©l√©phones compris dans la zone rouge sont consid√©r√©s comme *inefficaces*, c'est √† dire que ce sont de mauvais rapports qualit√©-prix alors que ceux qui sont au-dessus sont de bons rapport qualit√©-prix. A noter que ce seuil peut √™tre aussi modifi√© par l'utilisateur si il veut plus de contr√¥le.

En plus de tout √ßa, l'utilisateur dispose aussi d'un diagramme en barres dynamique de l'efficacit√© moyenne par marque.

4. **Comparateur**

*Corentin*


L'id√©e est ensuite de s'appuyer sur la page d'analyse de l'efficacit√© pour comparer deux t√©l√©phones √† prix similaires mais √† efficacit√© diff√©rente. La page Comparateur permet pr√©cis√©ment de faire √ßa.

Ce comparateur est plus complet que ceux actuellement existants parce qu'il inclue √©videmment l'efficacit√© mais aussi un syst√®me permettant de comparer les caract√©ristiques comme la RAM, le stockage, etc.

$\Rightarrow$ On peut par exemple choisir l'**iPhone 14 plus** (256 Go) et le **Google Pixel 8 Pro** (128 Go) qui ont des prix similaires mais des efficacit√©s l√©g√®rement diff√©rentes.

5. **D√©tails**

*Buk*


Cet onglet permet de visualiser tous les mod√®les disponibles et leurs caract√©ristiques, ou alors de filtrer l'ensemble des t√©l√©phones disponibles selon la marque, la capacit√© de stockage et la RAM. Dans le tableau on peut filtrer selon chaque variable disponible.

:::

## Pr√©sentation des mod√®les

| **Mod√®le**                        | **Variables** | **Estimateur** |
|-----------------------------------|---------------|----------------|
| _R√©gression lin√©aire (h√©donique)_ | niveau-niveau | `MCO`          |
| _R√©gression lin√©aire (h√©donique)_ | log-niveau    | `MCO`          |
| _SFA (fronti√®re de co√ªt)_         | log-niveau    | `MV`           |

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Buk*

Avant de rentrer dans la partie des estimations √©conom√©triques, on va vous faire quelques rapides rappels de notre partie de recherche pour vous rafra√Æchir la m√©moire.

Et ensuite on vous pr√©sentera les r√©sultats de 3 mod√®les diff√©rents que vous voyez √† l'√©cran.
:::


## Hedonic Pricing ~ Rappel th√©orique (I)

Cadre apport√© par @rosen1974. On √©tudie un bien diff√©renci√© $z$ d√©crit par le vecteur de ses $n$ caract√©ristiques mesurables tel que : 

:::{.fragment .fade-in}
$$z = (z_1, z_2, \dots, z_n)$$ 
:::

:::{.fragment .fade-in}
> *La diff√©renciation horizontale et verticale des produits implique qu'une vaste gamme de paniers est disponible.*
:::

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::

::: {.notes}
*Buk*



Dans le cadre apport√© par Rosen, on √©tudie un bien diff√©renci√© z d√©crit par le vecteur de ses n caract√©ristiques mesurables.
Vecteur


Il peut y avoir plusieurs combinaisons z1,zn diff√©rentes ce qui fait que le bien est diff√©renci√©.


On peut alors parler de :

**Diff√©renciation Horizontale** $\Rightarrow$ A prix donn√©, il n'y a pas unanimit√© dans le choix des consommateurs entre 2 biens (jaune et rouge) : ce sont des diff√©rences de go√ªts.

**Diff√©renciation Verticale** $\Rightarrow$ A prix donn√©, il y a unanimit√© dans le choix des consommateurs entre 2 voitures biens : l'un est meilleur que l'autre.

$\rightarrow$ Ces diff√©renciations vont faire qu'une vaste gamme de paniers sera dispo sur le march√©.
:::

## Hedonic Pricing ~ Rappel th√©orique (II)

```{r}
set.seed(43)
num_points <- 6
data <- data.frame(
    x = sample(0:10, num_points, replace = TRUE),
    y = sample(0:10, num_points, replace = TRUE),
    products = paste("Bien", 1:num_points)
)


ggplot(data, aes(x = x, y = y, color = products)) +
    geom_point(size = 5) +
    labs(
        title = "Plan de diff√©rents biens avec 2 caract√©ristiques.",
        x = expression(z[1]),
        y = expression(z[2])
    ) +
    theme(
        plot.title = element_text(size = 20),
        axis.title = element_text(size = 16),
        axis.text = element_text(size = 14),
        legend.title = element_blank(),
        legend.text = element_text(size = 14),
        text = element_text(color = "white")
    )
```

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::

::: {.notes}
*Buk*


On est habitu√© √† repr√©senter les pr√©f√©rences des consommateurs en termes de quantit√©s de biens $x_1$, $x_2$. Ici, changement de paradigme : on va en fait repr√©senter les pr√©f√©rences des consommateurs en termes de caract√©ristiques de biens.

:::

## Hedonic Pricing ~ Rappel th√©orique (III)

- Le consommateur n'ach√®te qu'**une seule** unit√© de bien qui est une combinaison d'attributs $z_1, z_2, \dots, z_n$.
- Un prix est donc d√©fini en chaque point du plan et guide les choix de localisation des consommateurs et des producteurs concernant les ensembles de caract√©ristiques achet√©s et vendus.

:::{.fragment .fade-in}
$$\boxed{p(z) = p(z_1, z_2, \dots, z_n)}$$
:::

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::

:::{.notes}
*Corentin*


Achat d'une seule unit√© de bien car historiquement, Rosen s'int√©resse principalement aux biens durables (Machine √† laver, logements, voitures, smartphones...). Pourquoi ? C'est parce que c'est beaucoup plus simple d'obtenir des caract√©ristiques observables sur ces biens durables que sur des biens consommables.

On aboutit √† une relation fonctionnelle entre les caract√©ristiques des biens
et leur prix, appel√©e fonction de prix h√©donique $p(z)$.

En fait, on recherche le lien qu'il y a entre le prix et les caract√©ristiques d'un produit et ce qu'on mesure r√©sulte potentiellement d'effets de pr√©f√©rence des consommateurs ou de co√ªts des producteurs.

Tout √ßa pour dire que l'augmentation du prix peut donc √™tre li√© √† un effet co√ªt ou un effet demande, et la difficult√© c'est que ces effets sont difficilement dissociables.

:::

## OLS LEVEL-LEVEL (I) {.smaller}

**Forme fonctionnelle :**

$$
\begin{split}
price_i = \beta_0 + \beta_1 storage_i + \beta_2 brand_i + \beta_3 ram_i\\
+ \beta_4 induction_i + \beta_5 screen\_size_i + \beta_6 screen\_type_i\\
+ \beta_7 made\_in_i + \beta_8 upgrade\_storage_i + \beta_{9} das\_limbs_i \\
+ \beta_{10} network_i + \beta_{11} ppi_i + \epsilon_i
\end{split}
$$

<hr>

:::: {.columns}
::: {.column width="50%"}
- *storage* : Capacit√© de stockage
- *brand* : Marque 
- *ram* : RAM du t√©l√©phone
- *induction* : Charge √† induction 
- *screen_size* : Taille de l'√©cran
- *screen_type* : Type d'√©cran
:::

::: {.column width="50%"}
- *made_in* : Lieu de fabrication
- *upgrade_storage* : Carte SD
- *das_limbs* : DAS membres
- *network* : R√©seau
- *ppi* : Pixels par Pouce
:::
::::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::


:::{.notes}
*Buk*

On en arrive √† la partie d'application du pricing h√©donique $\Rightarrow$ On va d√©composer le prix d'un bien, en l'occurence un smartphone, en 11 caract√©ristiques : le stockage, la marque, la ram, la taille et le type d'√©cran, etc.

Ici on retrouve le mod√®le en niveau dont les variables n'ont pas √©t√© choisies au hasard mais qui ont fait l'objet d'une s√©lection de variables gr√¢ce √† un algorithme g√©n√©tique, on l'avait expliqu√© mais on ne va pas re-rentrer dans les d√©tails. L'int√©r√™t de ce mod√®le en niveau c'est de pouvoir directement interpr√©ter les coefficients comme des prix (effets marginaux). 

:::

## OLS LEVEL-LEVEL (II) {.smaller}

```{r}
df_phones <- read_delim("Web_Scraping/data/df_clean_2.csv", delim = ";")

df_phones <- df_phones |> mutate(
    storage = case_when(storage == 8 ~ 128, .default = as.double(storage)),
    screen_type = case_when(model == "Samsung Galaxy Z Fold 3" ~ "Pliable", .default = as.character(screen_type))
)

levelhedonic <- lm(
    price ~ storage + brand + ram + induction + screen_size + screen_type + made_in + upgrade_storage + das_limbs + network + ppi,
    data = df_phones
)

r_squared_level <- round(summary(levelhedonic)$r.squared, 3)

r_adj_squared_level <- round(summary(levelhedonic)$adj.r.squared, 3)

summary(levelhedonic)$coefficients |>
    as.data.frame() |>
    rownames_to_column(var = "Variables") |>
    as_tibble() |>
    janitor::clean_names() |>
    mutate(
        variables = case_when(
            variables == "brandGOOGLE" ~ "*brand* `(GOOGLE)`",
            variables == "brandHONOR" ~ "*brand* `(HONOR)`",
            variables == "brandMOTOROLA" ~ "*brand* `(MOTOROLA)`",
            variables == "brandOPPO" ~ "*brand* `(OPPO)`",
            variables == "brandSAMSUNG" ~ "*brand* `(SAMSUNG)`",
            variables == "brandSONY" ~ "*brand* `(SONY)`",
            variables == "brandXIAOMI" ~ "*brand* `(XIAOMI)`",
            variables == "inductionTRUE" ~ "*induction* `(True)`",
            variables == "screen_typeBords incurv√©s" ~ "*screen_type* `(Bords Incurv√©s)`",
            variables == "screen_typePlat" ~ "*screen_type* `(Plat)`",
            variables == "screen_typePliable" ~ "*screen_type* `(Pliable)`",
            variables == "made_inJapon" ~ "*made_in* `(Japon)`",
            variables == "made_inTha√Ølande" ~ "*made_in* `(Tha√Ølande)`",
            variables == "made_inVi√™t Nam" ~ "*made_in* `(Vi√™t Nam)`",
            variables == "upgrade_storageTRUE" ~ "*upgrade_storage* `(True)`",
            variables == "network5G" ~ "*network* `(5G)`",
            .default = as.character(glue::glue("*{variables}*"))
        )
    ) |>
    mutate(signif = makestars(pr_t)) |>
    gt() |>
    cols_hide(c(t_value, pr_t)) |>
    cols_label(
        variables = gt::md("**Variables**"),
        estimate = gt::md("**Coefficients**"),
        std_error = gt::md("**Ecart Type**"),
        signif = gt::md("**Significativit√©**")
    ) |>
    tab_header(
        title = md("R√©sultats de l'estimation pour le mod√®le  de pricing **H√©donique**"),
        subtitle = md("*Variable d√©pendante* : `price`")
    ) |>
    fmt_number(
        columns = c(std_error, pr_t),
        decimals = 2,
        drop_trailing_zeros = TRUE
    ) |>
    data_color(
        columns = estimate,
        rows = estimate < 0,
        method = "numeric",
        palette = c("red", "orange"),
        apply_to = "text"
    ) |>
    data_color(
        columns = estimate,
        rows = estimate > 0,
        method = "numeric",
        palette = c("lightgreen", "darkgreen"),
        apply_to = "text"
    ) |>
    fmt_currency(
        columns = c(estimate),
        currency = "euro",
        placement = "right",
        incl_space = TRUE
    ) |>
    fmt_markdown(c(variables, signif)) |>
    tab_footnote(
        md(glue::glue("$R^2=$ {r_squared_level}"))
    ) |>
    tab_footnote(
        md(glue::glue("| $R^2_{{adj}}=$ {r_adj_squared_level}"))
    ) |>
    tab_options(
        table.background.color = "#222222",
        table.font.color = "white",
        table.font.size = 8,
    ) |>
    opt_interactive(page_size_default = 5, use_highlight = TRUE)
```

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::


:::{.notes}
*Buk*

On a un $R^2$ qui est tr√®s bon : 86,7 % de la variance du prix est expliqu√©e par nos variables. En fait, √ßa nous confirme que √ßa a du sens d'√©tudier les prix des t√©l√©phones en fonction des caract√©ristiques.

Ici le coefficient $\beta_1$ s‚Äôinterpr√®te comme l‚Äôeffet marginal d‚Äô1 Go suppl√©mentaire
de capacit√© de stockage sur le prix, c'est √† dire que si la capacit√© de stockage augmente de 1 Go, alors, le prix augmente de 92 centimes, cet.par.

- En ayant comme cat√©gorie de r√©f√©rence Apple pour la variable marque (brand), on peut
voir que toutes les marques ont un impact n√©gatif sur le prix, cet. par.

- La marque la plus valoris√©e derri√®re Apple est **SONY** avec 304.56 ‚Ç¨ de diff√©rence
par rapport √† **APPLE**.

- La marque la moins valoris√©e est **XIAOMI** avec 585.62 ‚Ç¨ de diff√©rence par rapport
√† **APPLE**.

- Une augmentation d‚Äô1 Go de ram augmente le prix de 26.97 ‚Ç¨, cet. par. (Faire lien avec graph insight)

Pour le type d‚Äô√©cran (screen_type), la cat√©gorie de r√©f√©rence est borderless (un √©cran sans
bordure).

- Disposer d‚Äôun √©cran √† bord incurv√© diminue le prix de 240.50 ‚Ç¨ par rapport √† la
cat√©gorie de r√©f√©rence borderless, cet. par.

- Pour l‚Äô√©cran plat, le prix diminue de 100.54 ‚Ç¨ par rapport √† la cat√©gorie de r√©f√©-
rence, cet. par.

- Avoir un √©cran pliable fait augmenter le prix de 144.66 ‚Ç¨ par rapport √† la cat√©gorie
de r√©f√©rence, cet. par.
:::

## OLS LEVEL-LEVEL (III)

```{r}
performance::check_posterior_predictions(levelhedonic)
```

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*


Aussi, une √©tape visuelle qu'on peut mettre en place est de v√©rifier l‚Äôajustement du
mod√®le. La v√©rification pr√©dictive a posteriori permet de simuler des donn√©es r√©pliqu√©es avec le mod√®le ajust√© puis les comparer aux donn√©es observ√©es (en coulisses il y a du bootstrap derri√®re).

$\Rightarrow$ L‚Äôobjectif est de d√©tecter si le mod√®le est inad√©quat pour d√©crire les donn√©es. Les simulations vont nous aider √† √©valuer la perf du mod√®le.

Ici on retrouve bien en vert la distribution bimodale des prix qu'on avait vu dans notre application, mais par contre le mod√®le a du mal √† la repr√©senter, surtout pour les t√©l√©phones entre 200 et 500 ‚Ç¨.
:::

## OLS LEVEL-LEVEL (IV) {.smaller}

```{r}
ggplot(levelhedonic, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0, color = "darkgreen") +
    labs(x = expression(hat(y[i])), y = expression(e[i])) +
    ggtitle("Valeurs pr√©dites et r√©sidus")
```

```{r}
heterosced_levelhedonic <- performance::check_heteroscedasticity(levelhedonic)
```

::: {.fragment .fade-in}
::: {.fragment .highlight-red}

**Pr√©sence d'h√©t√©rosc√©dasticit√©** (Variance des erreurs $\epsilon_i$ non constantes) ~ $p-value < 0.05$.

:::
:::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*

Vous vous en doutez, mais vu le graphique pr√©c√©dent, il y a une hypoth√®se importante qui est viol√©e dans ce mod√®le, et √©videmment on voit bien que les r√©sidus ne sont pas homosc√©dastiques, et le test de *Breusch-Pagan* nous le confirme.
:::

## OLS LEVEL-LEVEL (V) {.smaller}

```{r}
mean_resid <- mean(levelhedonic$resid)
sd_resid <- sd(levelhedonic$resid)

ggplot(levelhedonic, aes(x = .resid)) +
    geom_histogram(aes(y = after_stat(density)), bins = 40, fill = "white", alpha = 0.7) +
    stat_function(fun = dnorm, args = list(mean = mean_resid, sd = sd_resid), color = "darkgreen", size = 1) +
    labs(x = "R√©sidus", y = "Densit√©") +
    ggtitle("Histogramme des r√©sidus avec loi normale superpos√©e")

skewness_levelhedonic <- skewness(levelhedonic$residuals)
```

- Valeur du coefficient d'asym√©trie : **`r round(skewness_levelhedonic,2)`**

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

::: {.notes}
*Corentin*

Enfin, on peut aussi s'int√©resser √† la normalit√© des r√©sidus en regardant le coefficient d'asym√©trie

On voit que le coefficient est positif. Cette asym√©trie positive indique une concentration de valeurs sur le c√¥t√© gauche de la distribution, on peut d'ailleurs le voir sur l'histogramme.
:::


## OLS LOG-LEVEL (I) {.smaller}

**Forme fonctionnelle :**

$$
\begin{split}
\ln(price_i) = \beta_0 + \beta_1 storage_i + \beta_2 brand_i + \beta_3 ram_i\\
+ \beta_4 induction_i + \beta_5 screen\_size_i + \beta_6 screen\_type_i\\
+ \beta_7 made\_in_i + \beta_8 upgrade\_storage_i + \beta_{9} das\_limbs_i \\
+ \beta_{10} network_i + \beta_{11} ppi_i + \epsilon_i
\end{split}
$$

<hr>

::: {.callout-note}

Prendre le logarithme de la variable d√©pendante *(price)* peut aider √† stabiliser la variance et r√©duire l'h√©t√©rosc√©dasticit√©.

:::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
::: 

::: {.notes}
*Buk*


Prendre le logarithme de la variable d√©pendante *(price)* peut aider √† stabiliser la variance et r√©duire l'h√©t√©rosc√©dasticit√©.


On aurait aussi pu utiliser la m√©thode des moindres carr√©s pond√©r√©s pour essayer d'√©liminer l'h√©t√©rosc√©dasticit√©, mais en fait la sp√©cification log-lin√©aire est requise pour l'estimation d'un mod√®le SFA ce qui lui conf√®re un avantage suppl√©mentaire.
:::

## OLS LOG-LEVEL (II) {.smaller}

```{r}
loghedonic <- lm(
    logprice ~ storage + brand + ram + induction + screen_size + screen_type + made_in + upgrade_storage + das_limbs + network + ppi,
    data = df_phones
)

r_squared_log <- round(summary(loghedonic)$r.squared, 3)

r_adj_squared_log <- round(summary(loghedonic)$adj.r.squared, 3)

summary(loghedonic)$coefficients |>
    as.data.frame() |>
    rownames_to_column(var = "Variables") |>
    as_tibble() |>
    janitor::clean_names() |>
    mutate(
        variables = case_when(
            variables == "brandGOOGLE" ~ "*brand* `(GOOGLE)`",
            variables == "brandHONOR" ~ "*brand* `(HONOR)`",
            variables == "brandMOTOROLA" ~ "*brand* `(MOTOROLA)`",
            variables == "brandOPPO" ~ "*brand* `(OPPO)`",
            variables == "brandSAMSUNG" ~ "*brand* `(SAMSUNG)`",
            variables == "brandSONY" ~ "*brand* `(SONY)`",
            variables == "brandXIAOMI" ~ "*brand* `(XIAOMI)`",
            variables == "inductionTRUE" ~ "*induction* `(True)`",
            variables == "screen_typeBords incurv√©s" ~ "*screen_type* `(Bords Incurv√©s)`",
            variables == "screen_typePlat" ~ "*screen_type* `(Plat)`",
            variables == "screen_typePliable" ~ "*screen_type* `(Pliable)`",
            variables == "made_inJapon" ~ "*made_in* `(Japon)`",
            variables == "made_inTha√Ølande" ~ "*made_in* `(Tha√Ølande)`",
            variables == "made_inVi√™t Nam" ~ "*made_in* `(Vi√™t Nam)`",
            variables == "upgrade_storageTRUE" ~ "*upgrade_storage* `(True)`",
            variables == "network5G" ~ "*network* `(5G)`",
            .default = as.character(glue::glue("*{variables}*"))
        )
    ) |>
    mutate(signif = makestars(pr_t)) |>
    gt() |>
    cols_hide(c(t_value, pr_t)) |>
    cols_label(
        variables = gt::md("**Variables**"),
        estimate = gt::md("**Coefficients**"),
        std_error = gt::md("**Ecart Type**"),
        signif = gt::md("**Significativit√©**")
    ) |>
    tab_header(
        title = md("R√©sultats de l'estimation pour le mod√®le  de pricing **H√©donique**"),
        subtitle = md("*Variable d√©pendante* : `log(price)`")
    ) |>
    fmt_number(
        columns = c(estimate, std_error, pr_t),
        decimals = 2,
        drop_trailing_zeros = TRUE,
    ) |>
    fmt_percent(
        columns = estimate,
        rows = between(estimate, 0, 4),
        pattern = "+{x}"
    ) |>
    fmt_percent(
        columns = estimate,
        rows = estimate < 0,
    ) |>
    data_color(
        columns = estimate,
        rows = variables != "(Intercept)",
        method = "numeric",
        palette = c("red", "orange"),
        apply_to = "text"
    ) |>
    data_color(
        columns = estimate,
        rows = estimate > 0,
        method = "numeric",
        palette = c("lightgreen", "darkgreen"),
        apply_to = "text"
    ) |>
    fmt_markdown(c(signif, variables)) |>
    tab_footnote(
        md(glue::glue("$R^2=$ {r_squared_log}"))
    ) |>
    tab_footnote(
        md(glue::glue("| $R^2_{{adj}}=$ {r_adj_squared_log}"))
    ) |>
    tab_options(
        table.background.color = "#222222",
        table.font.color = "white"
    ) |>
    opt_interactive(page_size_default = 5, use_highlight = TRUE)
```



::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Buk*


$R^2$ meilleur que dans la r√©gression pr√©c√©dente mais on ne peut pas les comparer directement car on n'a pas la m√™me variable explicative √† cause du log.

Ici le coefficient $\beta_1$ s‚Äôinterpr√®te comme le changement en pourcentage du prix lorsque
la capacit√© de stockage augmente d‚Äô1 Go, c'est √† dire que si la capacit√© de stockage augmente de 1 Go, alors, le prix augmente de 0.06%, cet.par.

- En ayant comme cat√©gorie de r√©f√©rence Apple pour la variable marque (brand), on peut
voir que toutes les marques ont un impact n√©gatif sur le prix, cet. par.

‚Äì La marque la plus valoris√©e derri√®re Apple est SAMSUNG avec une diff√©rence de prix
de 39.53%.
‚Äì La marque la moins valoris√©e est XIAOMI avec une diff√©rence de prix de 101.06% par
rapport √† Apple.

- Si la ram augmente de 1 Go, alors le prix augmente de 7.8%, cet. par

‚Äì Disposer d‚Äôun √©cran √† bord incurv√© diminue le prix de 9.97% par rapport √† la
cat√©gorie de r√©f√©rence, cet. par.
‚Äì Pour l‚Äô√©cran plat, le prix diminue de 2.8% par rapport √† la cat√©gorie de r√©f√©-
rence, cet. par.
‚Äì Avoir un √©cran pliable fait augmenter le prix de 39.13% par rapport √† la cat√©gorie
de r√©f√©rence, cet. par.
:::

## OLS LOG-LEVEL (III)

```{r}
performance::check_posterior_predictions(loghedonic)
```

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*

Ici on voit que m√™me si le mod√®le a du mal √† pr√©dire une certaine portion de la distribution, il s'en sort tr√®s bien sur les extr√©mit√©s et globalement l'ad√©quation du mod√®le semble meilleure.

$\Rightarrow$ La distribution n'est pas la m√™me car on est pass√© au log.
:::

## OLS LOG-LEVEL (IV) {.smaller}

```{r}
ggplot(loghedonic, aes(x = .fitted, y = .resid)) +
    geom_point() +
    geom_hline(yintercept = 0, color = "darkgreen") +
    labs(x = expression(hat(y[i])), y = expression(e[i])) +
    ggtitle("Valeurs pr√©dites et r√©sidus")
```

```{r}
heterosced_loghedonic <- performance::check_heteroscedasticity(loghedonic)
```

::: {.fragment .fade-in}
::: {.fragment .highlight-green}

**Pas de pr√©sence d'h√©t√©rosc√©dasticit√©** (Variance des erreurs $\epsilon_i$ constantes) ~ $p-value = 0.354$.

:::
:::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*


On le voit bien graphiquement et c'est confirm√© par le test de *Breusch-Pagan* qu'il n'y a plus de probl√®me d'h√©t√©rosc√©dasticit√© dans ce mod√®le.
:::

## OLS LOG-LEVEL (V) {.smaller}

```{r}
mean_resid <- mean(loghedonic$resid)
sd_resid <- sd(loghedonic$resid)

ggplot(loghedonic, aes(x = .resid)) +
    geom_histogram(
        aes(y = after_stat(density)), 
        bins = 40,
        fill = "white",
        alpha = 0.7
    ) +
    stat_function(
        fun = dnorm, 
        args = list(mean = mean_resid, sd = sd_resid),
        color = "darkgreen",
        size = 1
    ) +
    labs(x = "R√©sidus", y = "Densit√©") +
    ggtitle("Histogramme des r√©sidus avec loi normale superpos√©e")

skewness_loghedonic <- skewness(loghedonic$residuals)
```

- Valeur du coefficient d'asym√©trie : **`r round(skewness_loghedonic,2)`**

::: {.fragment}

@kumbhakar2015 mentionnent l'utilisation du coefficient d'asym√©trie comme *"test"* pr√©alable √† la sp√©cification d'une **SFA**.

:::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

::: {.notes}
*Corentin*


Ici on remarque que les r√©sidus semblent suivre une loi normale, mais on a quand m√™me encore un coefficient d'asym√©trie positif.

L'id√©e derri√®re le test est la suivante : Pour une sp√©cification SFA fronti√®re de co√ªt avec erreur compos√©e, la distribution des r√©sidus de l'estimation par MCO
doit avoir une asym√©trie positive. Si cette asym√©trie est positive, alors elle permet de confirmer l'existence d'une erreur unilat√©rale et donc la forme fonctionnelle SFA sera appropri√©e. On va justement revenir en d√©tail sur tout √ßa dans la partie suivante.

:::

## SFA ~ RAPPELS (I) {.smaller}

@aigner1977 :

**Objectif** : Formulation et estimation de fonctions de fronti√®re de production stochastique.

:::{.fragment .fade-in}
$${\displaystyle y_{i}=f(x_{i};\beta )\cdot TE_{i}}$$
:::

- $TE_i$ repr√©sente l'efficacit√© technique, d√©finie comme le ratio d'output observ√© sur l'output maximum r√©alisable, c'est √† dire : $TE_i = \dfrac{y_i}{y_i^*}$.

- Ajout d'un composant **stochastique** ${\exp \left\{{v_{i}}\right\}}$ qui repr√©sente les chocs al√©atoires affectant la production. La fonction de production devient alors :

:::{.fragment .fade-in}
$$\boxed{{\displaystyle y_{i}=f(x_{i};\beta )\cdot TE_{i}\cdot \exp \left\{{v_{i}}\right\}}}$$

:::


::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::

:::{.notes}
*Aybuk√©*


On vous a pr√©sent√© deux mod√®les qui appliquent le concept du pricing h√©donique mais qui finalement restent des r√©gressions lin√©aires classiques. 

- On repart d'une fonction de production, mais on lui ajoute un terme multiplicatif $TE_i$.

- Si $TE_i = 1$ alors la firme $i$ produit l'output maximum r√©alisable, alors que si $TE_i < 1$, il existe un √©cart entre l'output maximum et l'output effectivement observ√©.
:::

## SFA ~ RAPPELS (II) {.smaller}

On peut r√©-√©crire $TE_i$ sous la forme ${\displaystyle TE_{i}=\exp \left\{{-u_{i}}\right\}}$. D√®s lors, nous obtenons l'√©quation suivante :

:::{.fragment .fade-in}

$${\displaystyle y_{i}=f(x_{i};\beta )\cdot \exp \left\{{-u_{i}}\right\}\cdot \exp \left\{{v_{i}}\right\}}$$ 

:::

La SFA (`Stochastic Frontier Analysis`) est une m√©thode param√©trique : elle requiert une forme fonctionnelle pr√©cise et les termes d'erreur $\epsilon_i$ ont une distribution particuli√®re (compos√©e) :

- $v_i$ est une erreur al√©atoire $\Rightarrow$ variation inexpliqu√©e par les variables ind√©pendantes du mod√®le, avec $v_i \sim \mathcal{N}(0, \sigma^2_v)$.
- $u_i$ est un composant unilat√©ral qui peut √™tre choisi parmi plusieurs distributions et $u_i \geq 0$.

:::{.fragment .fade-in}
> *La sp√©cification de cette m√©thode permet d‚Äôestimer les scores de l‚Äôefficience technique de chaque firme (historiquement), ou produit, dans notre cas.*
:::

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::



:::{.notes}
*Corentin*

En fait ici en utilisant le logarithme on va passer d'une forme multiplicative √† une forme additive.
:::

## SFA ~ RAPPELS (III) {.smaller}

:::: {.columns}

::: {.column width="60%"}
*<u>$^*$Exemple</u>* : 

![](imgs/stochastic_image.jpeg){width=95%}

$*$ Droits d'auteur : [Lutz Bornmann](https://www.researchgate.net/profile/Lutz-Bornmann)
:::

:::{.column width="40%"}

A partir de cette repr√©sentation on peut clairement distinguer les effets de $v_i$ (`noise`) et ceux de $u_i$ (`inefficiency`).

***

- $y_i^*=$ output maximum
- $\Leftrightarrow \ln y_i^* = \ln\left[f(x_i;\beta)\right] + v_i$
- $y_i =$ output observ√©
- $\Leftrightarrow \ln y_i = \ln y_i^* -u_i$
- $\Leftrightarrow \ln y_i = \ln\left[f(x_i;\beta)\right] + v_i -u_i$


:::{.fragment} 

$$\boxed{\ln y_i = \ln\left[f(x_i;\beta)\right] + \epsilon_i}$$
:::

:::

::::

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::

:::{.notes}
*Buk*


L'objectif de cette slide est d'expliquer graphiquement la SFA.

A partir de ce graph, on peut distinguer les termes d'erreur donc les effets de vu qui est le bruit, et ceux de ui qui est l'inefficacit√©.

- y1 = f(x) + v donne l'output max
- y2 = f(x) + v - u donne le niveau de production r√©elle

On peut donc voir que ui tire la production vers le bas alors que vi peut fixer le niiveau max possible de la production en dessous ou au-dessus de la fronti√®re.


- On inclue aussi une transformation logarithmique permettant de manipuler plus facilement le terme d'erreur.

Une fois qu'on prend l'output max et qu'on enl√®ve l'inefficacit√©, on obtient ln de yi qui est le niveau de production r√©elle.

On a aussi $\epsilon_i$ qui repr√©sente le terme d'erreur compos√© $v_i - u_i$.
:::

## Choix de distributions

```{r}
halfnorm_density <- function(x, mu, sigma) {
  ifelse(x >= mu, (2 / (sqrt(2 * pi) * sigma)) * exp(-(x - mu)^2 / (2 * sigma^2)), 0)
}

# Param√®tres de la distribution half normal
mu_halfnorm <- 0
sigma_halfnorm <- 1 

ggplot(
    data.frame(x = c(0, 5)), aes(x = x)) +
    stat_function(
        fun = halfnorm_density,
        args = list(mu = mu_halfnorm, sigma = sigma_halfnorm),
        color = "darkgreen",
        linewidth = 1
    ) +
    stat_function(
        fun = dnorm,
        args = list(mean = 0, sd = 1),
        color = "orange",
        linetype = "dashed",
        linewidth = 1
    ) +
    theme(plot.title = element_markdown(face = "bold", size = 15)) +
    labs(
        title = "Distributions <span style='color:orange'>normale</span> et <span style='color:darkgreen'>semi-normale</span>",
        x = "",
        y = "Densit√© de probabilit√©") +
    scale_x_continuous(limits = c(-0, 5))
```

::: {.footer}
--- `Recherche`, R√©alisation, Restitution ---
:::


:::{.notes}
*Corentin*

Je vais tr√®s rapidement vous expliquer aussi pourquoi on est oblig√© de passer √† l'estimateur du Maximum de Vraisemblance et que les techniques des MCO ne fonctionnent plus ici : c'est tout simplement parce qu'on va combiner une disribution sym√©trique (en orange), celle de la loi normale avec une distribution qui ne l'est pas : celle de la semi-normale.
:::

## SFA Cost Frontier (I) {.smaller}

**Forme fonctionnelle :**

$$
\begin{split}
\ln(price_i) = \beta_0 + \beta_1 storage_i + \beta_2 brand_i + \beta_3 ram_i\\
+ \beta_4 induction_i + \beta_5 screen\_size_i + \beta_6 screen\_type_i\\
+ \beta_7 made\_in_i + \beta_8 upgrade\_storage_i + \beta_{9} das\_limbs_i \\
+ \beta_{10} network_i + \beta_{11} ppi_i + v_i + u_i
\end{split}
$$

<hr>

- Distribution choisie pour les $u_i \Rightarrow$ *semi-normale*.

- Distribution choisie *(par d√©faut)* pour les $v_i \Rightarrow$ *normale*.

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*

Dans ce mod√®le, on prend le point de vue du consommateur et dans l'ensemble des t√©l√©phones qui lui sont propos√©s qui disposent de plein de caract√©ristiques, on cherche √† lui indiquer le prix minimum dans l'espace des caract√©ristiques.

Par rapport √† la r√©gression log-h√©donique en fait on voit qu'il n'y a pas de grande diff√©rence √† part l'erreur compos√©e.
:::

## SFA Cost Frontier (II) {.smaller}

```{r}
scf <- sfa(
    log(price) ~ storage + brand + ram + induction + screen_size + screen_type 
    + made_in + upgrade_storage + das_limbs + network + ppi,
    data = df_phones,
    truncNorm = FALSE,
    ineffDecrease = FALSE
)

mean_eff <- efficiencies(scf) |> as_tibble() |> summarise(mean_eff = efficiency |> mean() |> round(3))
```


```{r}
summary(scf, extraPar = TRUE)$mleParam |>
    data.frame() |>
    rownames_to_column(var = "Variables") |>
    janitor::clean_names() |>
    mutate(
        variables = case_when(
            variables == "brandGOOGLE" ~ "*brand* `(GOOGLE)`",
            variables == "brandHONOR" ~ "*brand* `(HONOR)`",
            variables == "brandMOTOROLA" ~ "*brand* `(MOTOROLA)`",
            variables == "brandOPPO" ~ "*brand* `(OPPO)`",
            variables == "brandSAMSUNG" ~ "*brand* `(SAMSUNG)`",
            variables == "brandSONY" ~ "*brand* `(SONY)`",
            variables == "brandXIAOMI" ~ "*brand* `(XIAOMI)`",
            variables == "inductionTRUE" ~ "*induction* `(True)`",
            variables == "screen_typeBords incurv√©s" ~ "*screen_type* `(Bords Incurv√©s)`",
            variables == "screen_typePlat" ~ "*screen_type* `(Plat)`",
            variables == "screen_typePliable" ~ "*screen_type* `(Pliable)`",
            variables == "made_inJapon" ~ "*made_in* `(Japon)`",
            variables == "made_inTha√Ølande" ~ "*made_in* `(Tha√Ølande)`",
            variables == "made_inVi√™t Nam" ~ "*made_in* `(Vi√™t Nam)`",
            variables == "upgrade_storageTRUE" ~ "*upgrade_storage* `(True)`",
            variables == "network5G" ~ "*network* `(5G)`",
            .default = as.character(glue::glue("*{variables}*"))
        )
    ) |>
    mutate(signif = makestars(pr_z)) |>
    filter(variables %nin% c("*sigmaSqU*","*sigmaSqV*", "*sigma*", "*sigmaU*", "*sigmaV*", "*lambdaSq*", "*lambda*", "*varU*", "*sdU*")) |>
    gt() |>
    cols_hide(c(z_value, pr_z)) |>
    cols_label(
        variables = gt::md("**Variables**"),
        estimate = gt::md("**Coefficients**"),
        std_error = gt::md("**Ecart Type**"),
        signif = gt::md("**Significativit√©**")
    ) |>
    tab_header(
        title = md("R√©sultats de l'estimation pour le mod√®le **SFA**"),
        subtitle = md("*Variable d√©pendante* : `log(price)`")
    ) |>
    fmt_number(
        columns = c(estimate, std_error, pr_z),
        decimals = 3,
        drop_trailing_zeros = TRUE
    ) |>
    fmt_percent(
        columns = estimate,
        rows = variables %nin% c("*(Intercept)*","*sigmaSq*", "*gamma*", "*gammaVar*"),
        pattern = "+{x}"
    ) |>
    fmt_percent(
        columns = estimate,
        rows = estimate < 0,
    ) |>
    data_color(
        columns = estimate,
        rows = estimate < 0,
        method = "numeric",
        palette = c("red", "orange"),
        apply_to = "text"
    ) |>
    data_color(
        columns = estimate,
        rows = estimate > 0 & variables %nin% c("*(Intercept)*","*sigmaSq*", "*gamma*", "*gammaVar*"),
        method = "numeric",
        palette = c("lightgreen", "darkgreen"),
        apply_to = "text"
    ) |>
    fmt_markdown(c(variables,signif)) |>
    sub_missing() |>
    tab_footnote(
        md(glue::glue("**Efficacit√© moyenne** : {mean_eff}"))
    ) |>
    tab_footnote(
        md(glue::glue("**Efficacit√© moyenne** : {mean_eff}"))
    ) |>
    tab_options(
        table.background.color = "#222222",
        table.font.color = "white",
        table.font.size = 8,
    ) |>
    opt_interactive(page_size_default = 5, use_highlight = TRUE)
```

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

:::{.notes}
*Corentin*

On a les m√™mes niveaux de significativit√©, les signes des coefficients sont les m√™mes et les valeurs restent √† peu pr√®s les m√™mes avec un effet encore plus important des marques.

A savoir aussi, **gammaVar** √ßa correspond √† la part de variance totale qui est due √† l'inefficacit√©. Donc ici 37,5% de la variance totale est due √† l'innefficacit√©.

:::

## SFA Cost Frontier (III) {.smaller}

**Efficacit√© moyenne par marque**

En utilisant l‚Äôesp√©rance conditionnelle $E(\exp(-u_i)|\epsilon_i)$, on peut estimer le score d‚Äôefficacit√© pour chaque observation. 

- Commande `efficiencies()` du package `{frontier}`.

```{r}
eff_df <- efficiencies(scf) |> as_tibble()

bind_cols(df_phones, eff_df) |> 
    group_by(brand) |>
    summarise(
        min = min(efficiency),
        median = median(efficiency),
        mean = mean(efficiency),
        max = max(efficiency)
    ) |>
    mutate(brand = glue::glue("`{brand}`")) |> 
    gt() |> 
    fmt_number() |>
    fmt_markdown(brand) |> 
    cols_label(
        brand = md("**Marque**"),
        min = md("**Min**"),
        median = md("**M√©diane**"),
        mean = md("**Moyenne**"),
        max = md("**Max**")
    ) |> 
    tab_options(
        table.background.color = "#222222",
        table.font.color = "white",
        table.font.size = 17,
    )
```

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

::: {.notes}
*Buk*

Une fois qu'on a r√©alis√© l'estimation du mod√®le SFA, on r√©cup√®re un r√©sidu. Mais individuellement, on ne sait pas quelle est la part de $u_i$ dans $\epsilon_i$. 

Gr√¢ce au calcul de l'esp√©rance conditionnelle individuelle, on peut donc d√©terminer quels t√©l√©phones sont les plus/moins efficaces de notre s√©lection. On peut aussi faire des regroupements par marque, ce qu'on a d√©cid√© de vous montrer sur ce tableau.

A noter que m√™me si le package le fait pour nous en une commande c'est un calcul qui est complexe et qui fait plusieurs pages de formules qu'on a inclut dans le rapport mais qu'on ne va pas pr√©ciser ici.

:::

## SFA Cost Frontier (IV) {.smaller}

> Quel mod√®le choisir ?

```{r}
loglik_loghedonic <- logLik(loghedonic)[1]
loglik_sfa <- logLik(scf)[1]
```

- Log-Vraisemblance pour `OLS log-level` : ${\displaystyle {\ln\mathcal {L_1}}(\theta ;y, X)}=$ **`r round(loglik_loghedonic,2)`**

- Log-Vraisemblance pour `SFA Cost Frontier` : ${\displaystyle {\ln\mathcal {L_2}}(\theta ;y, X)}=$ **`r round(loglik_sfa,2)`**

:::{.fragment}
Avec $y$ le vecteur de $\ln(price)$ et $X$ la matrice de variables ind√©pendantes.
:::

:::{.fragment}

**Test de rapport de vraisemblance**

$$
\begin{cases}
H_0: OLS \text{ log-level}\\
H_1: SFA \text{ cost frontier}
\end{cases}
$$
:::

- Statistique de test $\lambda_{RV} = 2 \cdot \left(\ln \mathcal{L_1}- \ln \mathcal{L_2}\right)$

```{r}
lrtest <- lrtest(scf)
pvalue_lrtest <- round(lrtest$`Pr(>Chisq)`[2],2)

#AIC(scf) < AIC(loghedonic)
```

:::{.fragment}
$\Rightarrow$ On rejette l'hypoth√®se nulle $H_0$ car la $p-value$ issue du test $=$ **`r pvalue_lrtest`** $< 0.05$.
:::

::: {.footer}
--- Recherche, `R√©alisation`, Restitution ---
:::

::: {.notes}
*Corentin*

On peut maintenant chercher √† savoir si il vaut mieux utiliser le mod√®le SFA Cost Frontier ou alors le mod√®le log-hedonic MCO.

En fait √ßa n'est pas tr√®s √©tonnant, √ßa rappelle le fait qu'on a trouv√© des coefficients significatifs au niveau des param√®tres permettant d'estimer l'inefficacit√© dans les r√©sultats de l'estimation SFA Cost Frontier.

:::

## Conclusion

Axe d'am√©lioration $\Rightarrow$ diviser la distribution en 2 cat√©gories et faire 2 mod√®les.

::: {.callout-tip}

## Atouts du projet

- Englobe une grande partie des mati√®res √©tudi√©es en master

- Axe de recherche

- Axe appliqu√© avec la cr√©ation d'une application fonctionnelle

:::

::: {.notes}
*Corentin*

En effet, on a utilis√© les cours suivants :

- Analyse de donn√©es
- Ing√©nierie logicielle et scraping avec Python
- Econom√©trie avec R
- Cours d'√©conomie avec pricing, micro√©conomie et analyse de la concurrence

*Aybuk√©*

D'un autre c√¥t√©, en s'appuyant sur ce qui avait d√©j√† √©t√© fait dans la litt√©rature, on a pu appliquer ces connaissances dans un domaine assez peu explor√© jusqu'√† maintenant.

Enfin, √©videmment, l'atout principal de ce projet c'est la cr√©ation et le d√©ploiement de notre application, qui, on l'esp√®re, vous aidera dans le choix de votre futur t√©l√©phone !

**FIN**

***

@arrondo2018

@lancaster1966

@farrell1957

@harrison1978

@reinhard2000

@rosko2008

@mohamad2008

@bello2010

@ahmad2019

@boistel2008
:::

::: {.footer}
--- Recherche, R√©alisation, `Restitution` ---
:::

## R√©f√©rences
